{
  "scenario": "Syntax",
  "description": "Test cases that do not depend on any registry definitions.",
  "defaultTestProperties": {
    "locale": "en-US"
  },
  "tests": [
    {
      "src": "hello",
      "exp": "hello"
    },
    {
      "src": "hello {world}",
      "exp": "hello world"
    },
    {
      "src": "hello { world\t\n}",
      "exp": "hello world",
      "expCleanSrc": "hello {world}"
    },
    {
      "src": "hello {\u3000world\r}",
      "exp": "hello world",
      "expCleanSrc": "hello {world}"
    },
    {
      "src": "hello {|world|}",
      "exp": "hello world"
    },
    {
      "src": "hello {||}",
      "exp": "hello "
    },
    {
      "src": "hello {$place}",
      "params": [
        {
          "name": "place",
          "value": "world"
        }
      ],
      "exp": "hello world"
    },
    {
      "src": "hello {$place-.}",
      "params": [
        {
          "name": "place-.",
          "value": "world"
        }
      ],
      "exp": "hello world"
    },
    {
      "src": "hello {$place}",
      "expErrors": [
        {
          "type": "unresolved-variable"
        }
      ],
      "exp": "hello {$place}"
    },
    {
      "src": "{$one} and {$two}",
      "params": [
        {
          "name": "one",
          "value": 1.3
        },
        {
          "name": "two",
          "value": 4.2
        }
      ],
      "exp": "1.3 and 4.2"
    },
    {
      "src": "{$one} et {$two}",
      "locale": "fr",
      "params": [
        {
          "name": "one",
          "value": 1.3
        },
        {
          "name": "two",
          "value": 4.2
        }
      ],
      "exp": "1,3 et 4,2"
    },
    {
      "src": ".local $foo = {bar} {{bar {$foo}}}",
      "exp": "bar bar"
    },
    {
      "src": ".local $foo = {|bar|} {{bar {$foo}}}",
      "exp": "bar bar"
    },
    {
      "src": ".local $foo = {|bar|} {{bar {$foo}}}",
      "params": [
        {
          "name": "foo",
          "value": "foo"
        }
      ],
      "exp": "bar bar"
    },
    {
      "src": ".local $foo = {$bar} {{bar {$foo}}}",
      "params": [
        {
          "name": "bar",
          "value": "foo"
        }
      ],
      "exp": "bar foo"
    },
    {
      "src": ".local $foo = {$baz} .local $bar = {$foo} {{bar {$bar}}}",
      "params": [
        {
          "name": "baz",
          "value": "foo"
        }
      ],
      "exp": "bar foo"
    },
    {
      "src": ".input {$foo} {{bar {$foo}}}",
      "params": [
        {
          "name": "foo",
          "value": "foo"
        }
      ],
      "exp": "bar foo"
    },
    {
      "src": ".input {$foo} .local $bar = {$foo} {{bar {$bar}}}",
      "params": [
        {
          "name": "foo",
          "value": "foo"
        }
      ],
      "exp": "bar foo"
    },
    {
      "src": ".local $foo = {$baz} .local $bar = {$foo} {{bar {$bar}}}",
      "params": [
        {
          "name": "baz",
          "value": "foo"
        }
      ],
      "exp": "bar foo"
    },
    {
      "src": ".local $x = {42} .local $y = {$x} {{{$x} {$y}}}",
      "exp": "42 42"
    },
    {
      "src": "{#tag}",
      "exp": "",
      "expParts": [
        {
          "type": "markup",
          "kind": "open",
          "name": "tag"
        }
      ]
    },
    {
      "src": "{#tag}content",
      "exp": "content",
      "expParts": [
        {
          "type": "markup",
          "kind": "open",
          "name": "tag"
        },
        {
          "type": "literal",
          "value": "content"
        }
      ]
    },
    {
      "src": "{#ns:tag}content{/ns:tag}",
      "exp": "content",
      "expParts": [
        {
          "type": "markup",
          "kind": "open",
          "name": "ns:tag"
        },
        {
          "type": "literal",
          "value": "content"
        },
        {
          "type": "markup",
          "kind": "close",
          "name": "ns:tag"
        }
      ]
    },
    {
      "src": "{/tag}content",
      "exp": "content",
      "expParts": [
        {
          "type": "markup",
          "kind": "close",
          "name": "tag"
        },
        {
          "type": "literal",
          "value": "content"
        }
      ]
    },
    {
      "src": "{#tag foo=bar}",
      "exp": "",
      "expParts": [
        {
          "type": "markup",
          "kind": "open",
          "name": "tag",
          "options": {
            "foo": "bar"
          }
        }
      ]
    },
    {
      "src": "{#tag foo=bar/}",
      "expCleanSrc": "{#tag foo=bar /}",
      "exp": "",
      "expParts": [
        {
          "type": "markup",
          "kind": "standalone",
          "name": "tag",
          "options": {
            "foo": "bar"
          }
        }
      ]
    },
    {
      "src": "{#tag a:foo=|foo| b:bar=$bar}",
      "params": [
        {
          "name": "bar",
          "value": "b a r"
        }
      ],
      "exp": "",
      "expParts": [
        {
          "type": "markup",
          "kind": "open",
          "name": "tag",
          "options": {
            "a:foo": "foo",
            "b:bar": "b a r"
          }
        }
      ]
    },
    {
      "src": "{/tag foo=bar}",
      "exp": "",
      "expParts": [
        {
          "type": "markup",
          "kind": "close",
          "name": "tag",
          "options": {
            "foo": "bar"
          }
        }
      ]
    },
    {
      "src": "{42 @foo @bar=13}",
      "exp": "42",
      "expParts": [
        {
          "type": "literal",
          "value": "42"
        }
      ]
    },
    {
      "src": "{42 @foo=$bar}",
      "exp": "42",
      "expParts": [
        {
          "type": "literal",
          "value": "42"
        }
      ]
    },
    {
      "src": "foo {+reserved}",
      "exp": "foo {+}",
      "expParts": [
        {
          "type": "literal",
          "value": "foo "
        },
        {
          "type": "fallback",
          "source": "+"
        }
      ],
      "expErrors": [
        {
          "type": "unsupported-expression"
        }
      ]
    },
    {
      "src": "foo {&private}",
      "exp": "foo {&}",
      "expParts": [
        {
          "type": "literal",
          "value": "foo "
        },
        {
          "type": "fallback",
          "source": "&"
        }
      ],
      "expErrors": [
        {
          "type": "unsupported-expression"
        }
      ]
    },
    {
      "src": "foo {?reserved @a @b=$c}",
      "exp": "foo {?}",
      "expParts": [
        {
          "type": "literal",
          "value": "foo "
        },
        {
          "type": "fallback",
          "source": "?"
        }
      ],
      "expErrors": [
        {
          "type": "unsupported-expression"
        }
      ]
    },
    {
      "src": ".foo {42} {{bar}}",
      "exp": "bar",
      "expParts": [
        {
          "type": "literal",
          "value": "bar"
        }
      ],
      "expErrors": [
        {
          "type": "unsupported-statement"
        }
      ]
    },
    {
      "src": ".foo{42}{{bar}}",
      "expCleanSrc": ".foo {42} {{bar}}",
      "exp": "bar",
      "expParts": [
        {
          "type": "literal",
          "value": "bar"
        }
      ],
      "expErrors": [
        {
          "type": "unsupported-statement"
        }
      ]
    },
    {
      "src": ".foo |}lit{| {42}{{bar}}",
      "expCleanSrc": ".foo |}lit{| {42} {{bar}}",
      "exp": "bar",
      "expParts": [
        {
          "type": "literal",
          "value": "bar"
        }
      ],
      "expErrors": [
        {
          "type": "unsupported-statement"
        }
      ]
    }
  ]
}
